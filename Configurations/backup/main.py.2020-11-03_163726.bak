import sys 
import os
import datetime
import requests

def main():
    maxL = 15
    memberList = getMemberList()
    myGen = memberListGenerator(memberList,maxL)
    subList = goToService(myGen)
    while (len(subList) == maxL):
        goToService(myGen)

def goToService(myGen):
    genRes = next(myGen)
    id = genRes[0]
    buildId = "B" + str(id)
    subList = genRes[1]
    compileList = convertSubListToStr(subList)
    compResp = compileClient(buildId, compileList)
    print(compResp)
    depResp = deployClient(buildId)
    print(depResp)
    return subList


def convertSubListToStr(memberList):
    compileList = ''
    for member in memberList:
        if(compileList==''):
            compileList = member
        else:
            compileList = compileList + ',' + member
    return compileList
    
def memberListGenerator(memberList,maxL):    
    i=375
    while True:
        print(str(i))
        subList = memberList[i:i+maxL]
        yield i, subList
        i=i+maxL    
        
def compileClient(buildId, compileList):
    baseURI=r'http://10.200.14.1:29080/bebop-rest/onTheDarkSide/'
    compileParams=r'compile/mainframe-all-apps/uat' + '/' + buildId + '/' + compileList
    request=baseURI + compileParams
    response = requests.get(request)
    if (response.status_code != 200):
        print("Should Exit") 
        exit
    return response.text

def getMemberList():
    dirpath = os.getcwd()
    memberListFile = dirpath + "/membersFile.txt"
    print(memberListFile)
    onlFile = open(memberListFile, "r")
    onlMemberList = list(dict.fromkeys(onlFile.read().split('\n')))
    commonMembersDict = dict.fromkeys(onlMemberList)
    memberList = list(commonMembersDict)
    return memberList

def deployClient(buildId):
    baseURI=r'http://10.200.14.1:29080/bebop-rest/onTheDarkSide/'
    deployParams=r'deploy/mainframe-all-apps/uat' + '/' + buildId
    request=baseURI + deployParams
    response = requests.get(request)
    if (response.status_code != 200):
        exit
    return response.text

if __name__ == '__main__': 
    main()